#!/bin/bash
# This override enable users to generate QR code for their shadowsocks servers.
# dependency: qrencode
# usage: generate-qr <output-dir> <hostname>

echo "	generate-qr: generate QR code for shadowsocks servers." | add-help
echo "	generate-qr <output-dir> <hostname>" | add-usage
echo "	generate-qr: 为 shadowsocks 服务器生成二维码。" | add-help chinese
echo "	generate-qr <输出文件夹> <域名>" | add-usage chinese

debug "internal function _getqr added, by generate-qr"

add-ui generate_QR_codes_for_shadowsocks_servers ui_genqr

function ui_genqr {
	local _genqr_TEMP=$(mktemp)
	let i=1
	dialog \
			--keep-window --begin 2 2 --inputbox "Output dir:" 0 0 \
	--and-widget	--keep-window --begin 4 4 --inputbox "Hostname:" 0 0 \
	2> $_genqr_TEMP

	[[ ! $? == 0 ]] && rm $_genqr_TEMP && return 1
	
	local dest_dir=$(cat $_genqr_TEMP | awk -F'\t' '{print $1}')
	local host=$(cat $_genqr_TEMP | awk -F'\t' '{print $2}')

	dialog --msgbox "$(generate-qr $dest_dir $host)" 0 0
	rm $_genqr_TEMP
}

function _getqr {
    qrencode -l L -o $1 $2
}

debug "generate-qr added, by generate-qr"

function generate-qr {
  [[ -z $2 ]] && echo "usage: generate-qr <output-dir> <hostname>" && return 1
  [[ ! -e $1 ]] && mkdir $1
  servers=$(show|sed '1d') # using show instead of reading the configure file here, because some users prefer base64 encrypted password.
  for server in $servers
  do
    _method=$(echo $server|awk -F "[()]" '{print $2}')
    _port=$(echo $server|awk -F "[{},]" '{print $2}')
    _pass=$(echo $server|awk -F "[{},]" '{print $3}')
    _server_str="$(echo $_method:$_pass@$2:$_port|base64)"
    _getqr $1/$_port.png "ss://$_server_str"
  done
  echo "Finished generate QR codes."
}
